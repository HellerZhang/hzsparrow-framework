#set($uuid=$columns.get(1))
package ${package}.controller;

import com.hzsparrow.framework.model.result.ResultDTO;
import com.hzsparrow.business.base.component.BaseController;
import ${package}.entity.${className}Entity;
import ${package}.service.${className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.validation.annotation.Validated;
import com.hzsparrow.business.base.validgroups.Create;
import com.hzsparrow.business.base.validgroups.Edit;
import javax.validation.groups.Default;

import java.util.List;

@RestController
@RequestMapping("/${moduleName}/${lclassname}")
public class ${className}Controller extends BaseController {

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 创建
     *
     * @param entity
     * @return
     */
    @RequestMapping("/save")
    public ResultDTO<Object> save(@Validated({Create.class, Default.class}) ${className}Entity entity) {
        return ${classname}Service.save(entity, getSessionUser());
    }

    /**
     * 修改
     *
     * @param entity
     * @return
     */
    @RequestMapping("/edit")
    public ResultDTO<Object> edit(@Validated({Edit.class, Default.class}) ${className}Entity entity) {
        return ${classname}Service.edit(entity, getSessionUser());
    }

    /**
     * 删除
     *
     * @param ${uuid.fieldName}
     * @return
     */
    @RequestMapping("/remove")
    public ResultDTO<Object> remove(${uuid.fieldType} ${uuid.fieldName}) {
        return ${classname}Service.remove(${uuid.fieldName});
    }

    /**
     * 获取所有
     *
     * @return
     */
    @RequestMapping("/findAll")
    public ResultDTO<List<${className}Entity>> findAll() {
        return ${classname}Service.findAll();
    }

    /**
     * 通过ID获取
     *
     * @param ${uuid.fieldName}
     * @return
     */
    @RequestMapping("/getById")
    public ResultDTO<${className}Entity> getById(${uuid.fieldType} ${uuid.fieldName}){
        return ${classname}Service.getById(${uuid.fieldName});
    }
}
