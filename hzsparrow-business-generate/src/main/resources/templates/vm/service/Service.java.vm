#set($uuid=$columns.get(1))
package ${package}.service;

import com.hzsparrow.framework.model.result.ResultDTO;
import com.hzsparrow.business.base.vo.LoginVO;
import ${package}.entity.${className}Entity;
import ${package}.mapper.${className}Mapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;
import java.util.UUID;
import java.util.Date;

/**
 * ${tableComment}Service
 */
@Service
public class ${className}Service {

    @Autowired
    private ${className}Mapper ${classname}Mapper;

    /**
     * 创建
     *
     * @param entity
     * @param user
     * @return
     */
    @Transactional
    public ResultDTO<Object> save(${className}Entity entity, LoginVO user) {
        entity.set${uuid.filedName4Upper}(UUID.randomUUID().toString());
        entity.setCrtId(user.getUserId());
        entity.setCrtName(user.getUserName());
        entity.setCrtTime(new Date());
        ${classname}Mapper.insert(entity);
        return ResultDTO.getOptionSuccess();
    }

    /**
     * 修改
     *
     * @param entity
     * @param user
     * @return
     */
    @Transactional
    public ResultDTO<Object> edit(${className}Entity entity, LoginVO user) {
        entity.setMdfId(user.getUserId());
        entity.setMdfName(user.getUserName());
        entity.setMdfTime(new Date());
        ${classname}Mapper.updateByPrimaryKey(entity);
        return ResultDTO.getOptionSuccess();
    }

    /**
     * 删除
     *
     * @param ${uuid.fieldName}
     * @return
     */
    @Transactional
    public ResultDTO<Object> remove(${uuid.fieldType} ${uuid.fieldName}) {
        ${classname}Mapper.deleteByPrimaryKey(${uuid.fieldName});
        return ResultDTO.getOptionSuccess();
    }

    /**
     * 获取所有
     *
     * @return
     */
    public ResultDTO<List<${className}Entity>> findAll() {
        List<${className}Entity> list = ${classname}Mapper.selectAll();
        return ResultDTO.getDataSuccess(list);
    }

    /**
     * 根据ID获取
     *
     * @param ${uuid.fieldName}
     * @return
     */
    public ResultDTO<${className}Entity> getById(${uuid.fieldType} ${uuid.fieldName}){
        ${className}Entity entity = ${classname}Mapper.selectByPrimaryKey(${uuid.fieldName});
        return ResultDTO.getDataSuccess(entity);
    }
}
